Hash Tables # common interview question
- map keys to values with O(1) look up
- underlying array
- hash function
when you insert an object and a key, the hash function
maps the key to an integer which indicates the index in
the array, the object is stored at that index

- collision, need to make array large as keys need to be unique
- good hash function - use of large primes (mathbased)

*Linked List Implementation of Hash Table*
Can store objects in a linked list (reduce size) but this
means you need to traverse the linked list (increase complexity)

*BST Implementation of Hash Table*
can use a binary search tree and guarantee O(log n) look up
as can keep tree balanced. Also reduce space as don't need to
make a large array at the beginning

